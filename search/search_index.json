{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"<code>privateer</code>","text":"<p>This is a package for backing up, restoring and otherwise working with docker volumes.  The package implements a simple scheme based on <code>rsync</code> and <code>ssh</code> to move content from a docker volume on one machine to a backup server on another, and from there perhaps to a third machine.  It also provides utilities for creating tarballs of these volumes and importing them into new volumes.</p>"},{"location":"#why-is-this-needed","title":"Why is this needed?","text":"<p>The official docker docs have a section on backing up and restoring volumes but the general recommendation is to make a tarball of a volume and move that around yourself.  We previously used <code>offen/docker-volume-backup</code> to backup volumes in their entirety to another machine as a tar file but the space and time requirements made this hard to use in practice.</p> <p>What we wanted is a system that would use <code>rsync</code> to move as little data as possible, and not require storing on one machine both the data in the volume and the tarball, which means that backups become impossible as disk space becomes low -- which in our experience was a situation where backups became critically important.</p>"},{"location":"#the-setup","title":"The setup","text":"<p>We assume some number of server machines -- these will receive data, and some number of client machines -- these will send data to the server(s).  A client can back any number of volumes to any number of servers, and a server can receive and serve any number of volumes to any number of clients.</p> <p>A typical framework for us would be that we would have a \"production\" machine which is backing up to one or more servers, and then some additional set of \"staging\" machines that receive data from the servers, which in practice never send any data (though they could if one wanted them to).</p> <p>Because we are going to use ssh for transport, we assume existence of HashiCorp Vault to store secrets.</p>"},{"location":"#configuration","title":"Configuration","text":"<p>The system is configured via a single <code>json</code> document, <code>privateer.json</code> which contains information about all the moving parts: servers, clients, volumes and the vault configuration.  See the configuration documentation for more details.</p> <p>We imagine that your configuration will exist in some repo, and that that repo will be checked out on all involved machines. Please add <code>.privateer_identity</code> to your <code>.gitignore</code> for this repo.</p>"},{"location":"cli/","title":"Command-line interface","text":"<p>The primary way we expect people to interact with <code>privateer</code> is via the command-line interface.  This page contains the automatically generated reference documentation for this interface; longer explanations are available elsewhere in the documentation.</p>"},{"location":"cli/#privateer","title":"privateer","text":"<p>Interact with privateer.</p> <p>Usage:</p> <pre><code>privateer [OPTIONS] COMMAND [ARGS]...\n</code></pre> <p>Options:</p> Name Type Description Default <code>--version</code> boolean Show the version and exit. <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-backup","title":"privateer backup","text":"<p>Back up a volume to a server.</p> <p>Performs a backup of <code>volume</code> to <code>server</code>.  Uses <code>rsync</code> over <code>ssh</code>; first uses will be slow, but subsequent uses likely much faster.</p> <p>Usage:</p> <pre><code>privateer backup [OPTIONS] VOLUME\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--as</code> text The machine to run the command as None <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--server</code> text Server to back up to None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-check","title":"privateer check","text":"<p>Check privateer configuration and connections.</p> <p>This command checks that everything is appropriately configured for use as a particular machine.  If <code>--connection</code> is passed we also check that we can communicate with any servers and can make connections with the keys that we hold.</p> <p>Usage:</p> <pre><code>privateer check [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--as</code> text The machine to run the command as None <code>--connection</code> boolean Check the connection <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-configure","title":"privateer configure","text":"<p>Configure this machine.</p> <p>A machine indicated by the <code>.privateer_identity</code> file in the same location as <code>privateer.json</code>.  This command also updates volumes to contain any data required by the role implied by the machine name.</p> <p>Usage:</p> <pre><code>privateer configure [OPTIONS] NAME\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-export","title":"privateer export","text":"<p>Export a volume as tar file.</p> <p>If using <code>--source=local</code> then no configuration is read, this will create a tar file of any docker volume.</p> <p>Usage:</p> <pre><code>privateer export [OPTIONS] VOLUME\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--as</code> text The machine to run the command as None <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--to-dir</code> path Directory to export to None <code>--source</code> text Source for the data None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-import","title":"privateer import","text":"<p>Import a volume from a tarfile.</p> <p>Given a tarfile containing the exported contents of a volume, import it into a local volume.  This command does not interact with any privateer configuration and can be run anywhere.</p> <p>If the volume exists already, this command will immediately fail, with no data written.</p> <p>Usage:</p> <pre><code>privateer import [OPTIONS] TARFILE VOLUME\n</code></pre> <p>Options:</p> Name Type Description Default <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-keygen","title":"privateer keygen","text":"<p>Generate keys for use with privateer.</p> <p>Keys will be stored in the vault, on creation, and this will overwrite any previously written keys.  You can generate the key for a single machine (passing <code>name=MACHINE</code>) or all keys at once (passing <code>--all</code>).</p> <p>Usage:</p> <pre><code>privateer keygen [OPTIONS] [NAME]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--all</code> boolean Generate all keys <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-pull","title":"privateer pull","text":"<p>Pull required docker images.</p> <p>The tag for images will be pulled from the local configuration (privateer.json in the local directory), which falls back on <code>main</code> if not specified.</p> <p>Usage:</p> <pre><code>privateer pull [OPTIONS]\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-restore","title":"privateer restore","text":"<p>Restore data to a volume.</p> <p>Restores <code>volume</code> from <code>server</code>.  The <code>--source</code> argument controls where <code>server</code> originally received the data from, in the case where two different machines are backing up the same volume to a server.</p> <p>If you provide a volume name with <code>--to-volume</code>, you can restore into a volume that differs from the upstream name.</p> <p>Usage:</p> <pre><code>privateer restore [OPTIONS] VOLUME\n</code></pre> <p>Options:</p> Name Type Description Default <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--as</code> text The machine to run the command as None <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--source</code> text Source for the data None <code>--server</code> text Server to pull from None <code>--to-volume</code> text Alternate volume to restore to None <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-schedule","title":"privateer schedule","text":"<p>Interact with the privateer scheduled backups.</p> <p>Usage:</p> <pre><code>privateer schedule [OPTIONS] {start|stop|status}\n</code></pre> <p>Options:</p> Name Type Description Default <code>--as</code> text The machine to run the command as None <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"cli/#privateer-server","title":"privateer server","text":"<p>Interact with the privateer server.</p> <p>You can start, stop or get the status of the server.  The server is required to receive backups and runs sshd.</p> <p>Usage:</p> <pre><code>privateer server [OPTIONS] {start|stop|status}\n</code></pre> <p>Options:</p> Name Type Description Default <code>--as</code> text The machine to run the command as None <code>--path</code> path The path to the configuration, or directory with privateer.json None <code>--dry-run</code> boolean Do nothing, but print docker commands <code>False</code> <code>--help</code> boolean Show this message and exit. <code>False</code>"},{"location":"config/","title":"Configuration","text":"<p>The system is configured via a single <code>json</code> document, <code>privateer.json</code> which contains information about all the moving parts: servers, clients, volumes and the vault configuration.</p> <p>We imagine that your configuration will exist in some repo, and that that repo will be checked out on all involved machines. Please add <code>.privateer_identity</code> to your <code>.gitignore</code> for this repo.</p> <p>A simple, complete, configuration could be:</p> <pre><code>{\n    \"servers\": [\n        {\n            \"name\": \"alice\",\n            \"hostname\": \"alice.example.com\",\n            \"port\": 10022,\n            \"key_volume\": \"privateer_keys\",\n            \"data_volume\": \"privateer_data\",\n            \"container\": \"privateer_server\"\n        }\n    ],\n    \"clients\": [\n        {\n            \"name\": \"bob\",\n            \"backup\": [\"data\"]\n        }\n    ],\n    \"volumes\": [\n        {\n            \"name\": \"data\"\n        }\n    ],\n    \"vault\": {\n        \"url\": \"http://localhost:8200\",\n        \"prefix\": \"/secret/privateer\"\n    }\n}\n</code></pre> <p>The sections here are all required:</p> <ul> <li><code>servers</code> contains an array of server locations.  Typically, you would have at least one as there's not a great deal of useful things that can be done with none.  Each server will correspond to a single machine (here, <code>alice.example.com</code>) and have a friendly name (here, <code>alice</code>).</li> <li><code>clients</code> contains an array of clients that might push to or pull from the servers.  You will always have at least one client entry or you really cannot do anything useful.  Each client has a friendly name (here, <code>bob</code>) and a list of targets to back up.</li> <li><code>volumes</code>: contains an array of volumes that we will back up and restore over the system.</li> <li><code>vault</code>: contains information about connecting to the HashiCorp Vault which contains the secrets that we will generate and use to connect from one machine to another.</li> </ul> <p>There are some constraints that are enforced across sections of the configuration:</p> <ul> <li>The <code>name</code> fields must be unique across all clients and servers; no name can appear twice and no client can be a server.</li> <li>Every volume referenced by clients must appear in the <code>volumes</code> field, though you can have volumes listed in <code>volumes</code> that no client references.</li> </ul> <p>We require the servers to explicitly set <code>key_volume</code> but not clients, because we expect that a single server machine might run multiple unrelated privateer servers, and that these will use different keys.  If you do this, each server also requires a different port.</p>"},{"location":"config/#practical-considerations","title":"Practical considerations","text":"<p>We assume that <code>privateer.json</code> is committed to git, and that this is the mechanism for distributing and synchronising the configuration between machines.</p>"},{"location":"config/#details","title":"Details","text":""},{"location":"config/#privateer.config","title":"<code>privateer.config</code>","text":""},{"location":"config/#privateer.config.Client","title":"<code>Client</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Client configuration</p> <p>Clients are only ever referred to from the client machine itself so we do not need to know their hostname.</p> <p>Only the <code>name</code> attribute is required.</p> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>A friendly name for the client.  This is the name used in all calls to the cli tool, or via the programmatic API.</p> </li> <li> <code>backup</code>               (<code>list[str]</code>)           \u2013            <p>An optional array of volumes to back up.  This would be empty (or missing, equivalently) on a machine that is not the source of truth for any data, such as a staging machine.  You can still restore from any volume that privateer knows about.</p> </li> <li> <code>key_volume</code>               (<code>str</code>)           \u2013            <p>The volume to store keys in.  The default is <code>privateer_keys</code> which may be reasonable but is only what you want if the client only acts as a client for a single privateer configuration.</p> </li> <li> <code>schedule</code>               (<code>Schedule | None</code>)           \u2013            <p>Optionally a schedule for regular backups</p> </li> </ul>"},{"location":"config/#privateer.config.Config","title":"<code>Config</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>The privateer configuration.</p> <p>Attributes:</p> <ul> <li> <code>servers</code>               (<code>list[Server]</code>)           \u2013            <p>A list of <code>Server</code> descriptions.  At least one here will be required to do anything useful.</p> </li> <li> <code>clients</code>               (<code>list[Client]</code>)           \u2013            <p>A list of <code>Client</code> descriptions, including the data sources that they will push into the system.  At least one here will be required to do anything useful.</p> </li> <li> <code>volumes</code>               (<code>list[Volume]</code>)           \u2013            <p>A list of <code>Volume</code> descriptions.  At least one here will be required to do anything useful.</p> </li> <li> <code>tag</code>               (<code>str</code>)           \u2013            <p>Optionally, the docker tag to use for <code>privateer</code> images. The default <code>latest</code> will be appropriate unless you are testing some new feature.</p> </li> </ul>"},{"location":"config/#privateer.config.Config.list_clients","title":"<code>list_clients()</code>","text":"<p>List known clients.</p> Return <p>A list of names of configured clients.</p>"},{"location":"config/#privateer.config.Config.list_servers","title":"<code>list_servers()</code>","text":"<p>List known servers.</p> Return <p>A list of names of configured servers.</p>"},{"location":"config/#privateer.config.Config.list_volumes","title":"<code>list_volumes()</code>","text":"<p>List known volumes.</p> Return <p>A list of names of configured volumes.</p>"},{"location":"config/#privateer.config.Config.machine_config","title":"<code>machine_config(name)</code>","text":"<p>Fetch the configuration for a given machine.</p> Return <p>Configuration for a machine; this has a different format for clients and servers, with few overlapping fields.</p>"},{"location":"config/#privateer.config.Schedule","title":"<code>Schedule</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configure schedule for regular backups.</p> <p>Attributes:</p> <ul> <li> <code>jobs</code>               (<code>list[ScheduleJob]</code>)           \u2013            <p>An array of ScheduleJobs, describing a backup task</p> </li> <li> <code>port</code>               (<code>int | None</code>)           \u2013            <p>Optional port, if you want to run the yacron API.  If not  given, then the API will not be exposed.</p> </li> <li> <code>container</code>               (<code>str</code>)           \u2013            <p>Optional name of the container. If not given, we  default to <code>privateer_scheduler</code></p> </li> </ul>"},{"location":"config/#privateer.config.ScheduleJob","title":"<code>ScheduleJob</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configure a regular backup job.</p> <p>Attributes:</p> <ul> <li> <code>server</code>               (<code>str</code>)           \u2013            <p>The name of the server to back up to.</p> </li> <li> <code>volume</code>               (<code>str</code>)           \u2013            <p>The name of the volume to back up.</p> </li> <li> <code>schedule</code>               (<code>str</code>)           \u2013            <p>The backup schedule, in \"cron\" format.  Extension formats, such as <code>@daily</code> are supported, otherwise use a 5-element cron specifier.  See https://crontab.guru/ for help generating and interpreting these.</p> </li> </ul>"},{"location":"config/#privateer.config.Server","title":"<code>Server</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configuration for a server.</p> <p>There are no defaults for any field, so all must be provided.</p> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>A friendly name for the server.  This is the name used in all calls to the cli tool, or via the programmatic API.</p> </li> <li> <code>hostname</code>               (<code>str</code>)           \u2013            <p>The full hostname for the server</p> </li> <li> <code>port</code>               (<code>int</code>)           \u2013            <p>The port to use for ssh.  We do not require any ssh server already running at the host, but run our own, so if you are already running ssh on port 22 you should use a different port.</p> </li> <li> <code>key_volume</code>               (<code>str</code>)           \u2013            <p>The volume to use to persist keys.  We suggest <code>privateer_&lt;application&gt;_keys,</code> where <code>&lt;application&gt;</code> is some short reference to the application being backed up.</p> </li> <li> <code>data_volume</code>               (<code>str</code>)           \u2013            <p>The volume to use to persist data.  We suggest <code>privateer_&lt;application&gt;_data</code>, where <code>&lt;application&gt;</code> is some short reference to the application being backed up.</p> </li> <li> <code>container</code>               (<code>str</code>)           \u2013            <p>The name of the long-running container that will run the privateer server.  We suggest <code>privateer_&lt;application&gt;_server</code>, where <code>&lt;application&gt;</code> is some short reference to the application being backed up.</p> </li> </ul>"},{"location":"config/#privateer.config.Vault","title":"<code>Vault</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Configure the vault.</p> <p>Attributes:</p> <ul> <li> <code>url</code>               (<code>str</code>)           \u2013            <p>The url of the vault server</p> </li> <li> <code>prefix</code>               (<code>str</code>)           \u2013            <p>The path prefix for secrets within a v1 key-value store.  This is typically mounted in vault at <code>/secret/</code>, so something like <code>/secret/privateer/&lt;application&gt;</code> is a reasonable choice</p> </li> <li> <code>token</code>               (<code>str | None</code>)           \u2013            <p>Optional token (or name of an environment variable to find this token) to fetch secrets.  If not present and a token is required then we look at the environment variables <code>VAULT_TOKEN</code> and <code>VAULT_AUTH_GITHUB_TOKEN</code> (in that order) and then prompt interactively for a token.</p> </li> </ul>"},{"location":"config/#privateer.config.Volume","title":"<code>Volume</code>","text":"<p>               Bases: <code>BaseModel</code></p> <p>Describe a volume.</p> <p>Attributes:</p> <ul> <li> <code>name</code>               (<code>str</code>)           \u2013            <p>The name of the volume; this is the same as the name of the volume on disk (e.g., listed by <code>docker volume list</code>).</p> </li> <li> <code>local</code>               (<code>bool</code>)           \u2013            <p>An optional boolean indicating if the volume is local to the server.  This is designed to support a workflow where content arrives on the server through some other process (in our case it's a barman process that is doing continual backup of a Postgres server).</p> </li> </ul>"},{"location":"config/#privateer.config.read_config","title":"<code>read_config(path)</code>","text":"<p>Read configuration from disk.</p> <p>Parameters:</p> <ul> <li> <code>path</code>               (<code>str | Path</code>)           \u2013            <p>Path to <code>privateer.json</code></p> </li> </ul> Return <p>The privateer configuration.</p>"}]}